name: Docker WebApp
on:
  workflow_run:
    workflows: ["Angular WebApp Build"]
    types: [completed]
    branches: [develop, master]
    tags: ['v*.*.*', 'latest']
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch or commit to build'
        required: true
        default: 'develop'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-webapp
jobs:
  deploy-web:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'release' || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: haya14busa/action-cond@v1
        id: condval
        with:
          cond: ${{ github.event_name == 'workflow_dispatch' }}
          if_true: "${{ github.event.inputs.branch }}"
          if_false: " ${{ github.ref_name }}"
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.condval.outputs.value }}
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # GitHub Action to install QEMU static binaries.
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0
      # GitHub Action to set up Docker Buildx.
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      # Determine Dockerfile and cache scope based on branch/event
      - name: Set build configuration
        id: build-config
        run: |
          if [[ "${{ github.event_name }}" == "release" ]] || [[ "${{ steps.condval.outputs.value }}" == *"master"* ]]; then
            echo "dockerfile=WebApp/Dockerfile.production" >> $GITHUB_OUTPUT
            echo "cache-scope=prod" >> $GITHUB_OUTPUT
            echo "tags=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
          else
            echo "dockerfile=WebApp/Dockerfile" >> $GITHUB_OUTPUT
            echo "cache-scope=dev" >> $GITHUB_OUTPUT
            echo "tags=${{ steps.meta.outputs.tags }}-dev" >> $GITHUB_OUTPUT
          fi
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.11.0
        with:
          context: WebApp/
          file: ${{ steps.build-config.outputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.build-config.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha, scope=${{ github.workflow }}-${{ steps.build-config.outputs.cache-scope }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ steps.build-config.outputs.cache-scope }}
